spring.application.name=API-GATEWAY
server.port=8080

# Eureka Configuration
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka



# ===================================================================
# RESILIENCE4J CONFIGURATION (for Circuit Breaker)
# ===================================================================
# This defines the BEHAVIOR of our circuit breakers
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.minimum-numberOf-calls=5
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.wait-duration-in-open-state=20s

spring.data.redis.host=localhost
spring.data.redis.port=6379

resilience4j.circuitbreaker.configs.default.sliding-window-size=20
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=60

# Gateway Routes
spring.cloud.gateway.server.webflux.routes[0].id=USER-SERVICE
spring.cloud.gateway.server.webflux.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/users/**
spring.cloud.gateway.server.webflux.routes[0].filters[0].name=RequestRateLimiter
spring.cloud.gateway.server.webflux.routes[0].filters[0].args.redis-rate-limiter.replenishRate=10
spring.cloud.gateway.server.webflux.routes[0].filters[0].args.redis-rate-limiter.burstCapacity=20
spring.cloud.gateway.server.webflux.routes[0].filters[0].args.key-resolver=#{ @userKeyResolver }
spring.cloud.gateway.server.webflux.routes[0].filters[1].name=Retry
spring.cloud.gateway.server.webflux.routes[0].filters[1].args.retries=3
spring.cloud.gateway.server.webflux.routes[0].filters[1].args.statuses=SERVICE_UNAVAILABLE
spring.cloud.gateway.server.webflux.routes[0].filters[2].name=CircuitBreaker
spring.cloud.gateway.server.webflux.routes[0].filters[2].args.name=userServiceCircuitBreaker
spring.cloud.gateway.server.webflux.routes[0].filters[2].args.fallbackUri=forward:/fallback/userService

spring.cloud.gateway.server.webflux.routes[1].id=FARM-SERVICE
spring.cloud.gateway.server.webflux.routes[1].uri=lb://FARM-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/farms/**

spring.cloud.gateway.server.webflux.routes[2].id=AUTH-SERVICE
spring.cloud.gateway.server.webflux.routes[2].uri=lb://AUTH-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/auth/**

# Gateway actuator endpoints work better with reactive gateway
management.endpoints.web.exposure.include=health,info,prometheus,metrics,gateway
management.endpoint.health.show-details=always
management.endpoint.prometheus.access=unrestricted


management.prometheus.metrics.export.enabled=true
management.metrics.tags.application=${spring.application.name}
# Tracing settings


logging.level.com.netflix=WARN
logging.level.org.springframework.cloud.netflix=INFO




